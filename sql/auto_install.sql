-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC. All rights reserved.                        |
-- |                                                                    |
-- | This work is published under the GNU AGPLv3 license with some      |
-- | permitted exceptions and without any warranty. For full license    |
-- | and copyright information, see https://civicrm.org/licensing       |
-- +--------------------------------------------------------------------+
--
-- Generated from schema.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--
-- /*******************************************************
-- *
-- * Clean up the existing tables - this section generated from drop.tpl
-- *
-- *******************************************************/

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `civicrm_health_monitor`;
DROP TABLE IF EXISTS `civicrm_health_alert_rule`;
DROP TABLE IF EXISTS `civicrm_health_alert`;
DROP TABLE IF EXISTS `civicrm_health_alarm_rule`;
DROP TABLE IF EXISTS `civicrm_health_alarm`;
DROP TABLE IF EXISTS `civicrm_device`;

SET FOREIGN_KEY_CHECKS=1;
-- /*******************************************************
-- *
-- * Create new tables
-- *
-- *******************************************************/

-- /*******************************************************
-- *
-- * civicrm_device
-- *
-- * CiviCRM Device
-- *
-- *******************************************************/
CREATE TABLE `civicrm_device` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique Device ID',
  `contact_id` int unsigned NOT NULL COMMENT 'FK to Contact',
  `name` varchar(255) NOT NULL COMMENT 'Unique Device Code',
  `device_type_id` int NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_device_code`(name),
  CONSTRAINT FK_civicrm_device_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE
)
ENGINE=InnoDB;


-- /*******************************************************
-- *
-- * civicrm_health_monitor
-- *
-- * The app will collect and send health data
-- *
-- *******************************************************/
CREATE TABLE `civicrm_health_monitor` (
                                          `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique HealthMonitor ID',
                                          `contact_id` int unsigned COMMENT 'FK to Contact',
                                          `date` datetime NOT NULL COMMENT 'Device Data Time',
                                          `device_type_id` int DEFAULT 1,
                                          `device_id` int unsigned NOT NULL COMMENT 'FK to Device',
                                          `sensor_id` int NOT NULL DEFAULT 1,
                                          `sensor_value` decimal(20,2) NOT NULL COMMENT 'Sensor Value',
                                          PRIMARY KEY (`id`),
                                          CONSTRAINT FK_civicrm_health_monitor_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE,
                                          CONSTRAINT FK_civicrm_health_monitor_device_id FOREIGN KEY (`device_id`) REFERENCES `civicrm_device`(`id`) ON DELETE CASCADE
)
    ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civicrm_health_alarm_rule
-- *
-- * Health Alarm Rule
-- *
-- *******************************************************/
CREATE TABLE `civicrm_health_alarm_rule` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique HealthAlarmRule ID',
  `contact_id` int unsigned COMMENT 'FK to Contact',
  `code` varchar(255) NOT NULL COMMENT 'Alarm Rule Code',
  `sensor_id` int NOT NULL DEFAULT 1,
  `sensor_value` decimal(20,2) NOT NULL COMMENT 'Sensor Value',
  `rule_id` int NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_code`(code),
  CONSTRAINT FK_civicrm_health_alarm_rule_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE
)
ENGINE=InnoDB;


-- /*******************************************************
-- *
-- * civicrm_health_alarm
-- *
-- * Health Alarm
-- *
-- *******************************************************/
CREATE TABLE `civicrm_health_alarm` (
                                        `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique HealthAlarm ID',
                                        `contact_id` int unsigned COMMENT 'FK to Contact',
                                        `health_monitor_id` int unsigned COMMENT 'FK to Health Monitor Data',
                                        `alarm_rule_id` int unsigned COMMENT 'FK to Health Rule',
                                        PRIMARY KEY (`id`),
                                        CONSTRAINT FK_civicrm_health_alarm_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE,
                                        CONSTRAINT FK_civicrm_health_alarm_health_monitor_id FOREIGN KEY (`health_monitor_id`) REFERENCES `civicrm_health_monitor`(`id`) ON DELETE CASCADE,
                                        CONSTRAINT FK_civicrm_health_alarm_alarm_rule_id FOREIGN KEY (`alarm_rule_id`) REFERENCES `civicrm_health_alarm_rule`(`id`) ON DELETE CASCADE
)
    ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civicrm_health_alert_rule
-- *
-- * Health Alert Rule (for message)
-- *
-- *******************************************************/
CREATE TABLE `civicrm_health_alert_rule` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique HealthAlertRule ID',
  `contact_id` int unsigned COMMENT 'FK to Contact',
  `code` varchar(255) NOT NULL COMMENT 'Alert Rule Code',
  `addressee_id` int unsigned COMMENT 'FK to Address Contact',
  `rule_id` int unsigned COMMENT 'FK to Alarm Rule',
  `title` varchar(255) NOT NULL COMMENT 'Alert Title',
  `message` varchar(1255) NOT NULL COMMENT 'Alert Message',
  `civicrm` tinyint NOT NULL DEFAULT true,
  `email` tinyint NOT NULL DEFAULT false,
  `sms` tinyint NOT NULL DEFAULT false,
  `telegram` tinyint NOT NULL DEFAULT false,
  `api` tinyint NOT NULL DEFAULT false,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_code`(code),
  CONSTRAINT FK_civicrm_health_alert_rule_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_civicrm_health_alert_rule_addressee_id FOREIGN KEY (`addressee_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_civicrm_health_alert_rule_rule_id FOREIGN KEY (`rule_id`) REFERENCES `civicrm_health_alarm_rule`(`id`) ON DELETE CASCADE
)
ENGINE=InnoDB;


-- /*******************************************************
-- *
-- * civicrm_health_alert
-- *
-- * Health Alert - Message sent by Alarm
-- *
-- *******************************************************/
CREATE TABLE `civicrm_health_alert` (
                                        `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique HealthAlert ID',
                                        `contact_id` int unsigned COMMENT 'FK to Contact',
                                        `health_alarm_id` int unsigned COMMENT 'FK to Health Alarm Data',
                                        `alert_rule_id` int unsigned COMMENT 'FK to Health Alert Rule',
                                        `civicrm` datetime COMMENT 'CiviCRM note created',
                                        `email` datetime COMMENT 'Email sent',
                                        `sms` datetime COMMENT 'SMS sent',
                                        `api` datetime COMMENT 'API alert sent',
                                        PRIMARY KEY (`id`),
                                        CONSTRAINT FK_civicrm_health_alert_contact_id FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE,
                                        CONSTRAINT FK_civicrm_health_alert_health_alarm_id FOREIGN KEY (`health_alarm_id`) REFERENCES `civicrm_health_alarm`(`id`) ON DELETE CASCADE,
                                        CONSTRAINT FK_civicrm_health_alert_alert_rule_id FOREIGN KEY (`alert_rule_id`) REFERENCES `civicrm_health_alert_rule`(`id`) ON DELETE CASCADE
)
    ENGINE=InnoDB;
