<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.octopus8.devices/xml/schema/CRM/Devices/06_Alert.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:44ca767fae090fbffd5c798d27db8db0)
 */
use CRM_Devices_ExtensionUtil as E;

/**
 * Database access object for the Alert entity.
 */
class CRM_Devices_DAO_Alert extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_o8_device_alert';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Alert ID
   *
   * @var int
   */
  public $id;

  /**
   * FK to Contact
   *
   * @var int
   */
  public $contact_id;

  /**
   * FK to Alarm Data
   *
   * @var int
   */
  public $alarm_id;

  /**
   * FK to Alert Rule
   *
   * @var int
   */
  public $alert_rule_id;

  /**
   * CiviCRM note created
   *
   * @var datetime
   */
  public $civicrm;

  /**
   * Email sent
   *
   * @var datetime
   */
  public $email;

  /**
   * SMS sent
   *
   * @var datetime
   */
  public $sms;

  /**
   * API alert sent
   *
   * @var datetime
   */
  public $api;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_o8_device_alert';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Alerts') : E::ts('Alert');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'contact_id', 'civicrm_contact', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'alarm_id', 'civicrm_o8_device_alarm', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'alert_rule_id', 'civicrm_o8_device_alert_rule', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique Alert ID'),
          'required' => TRUE,
          'where' => 'civicrm_o8_device_alert.id',
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('FK to Contact'),
          'where' => 'civicrm_o8_device_alert.contact_id',
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'add' => NULL,
        ],
        'alarm_id' => [
          'name' => 'alarm_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('FK to Alarm Data'),
          'where' => 'civicrm_o8_device_alert.alarm_id',
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'FKClassName' => 'CRM_Devices_DAO_Alarm',
          'add' => NULL,
        ],
        'alert_rule_id' => [
          'name' => 'alert_rule_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('FK to Alert Rule'),
          'where' => 'civicrm_o8_device_alert.alert_rule_id',
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'FKClassName' => 'CRM_Devices_DAO_AlertRule',
          'add' => NULL,
        ],
        'civicrm' => [
          'name' => 'civicrm',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Civicrm'),
          'description' => E::ts('CiviCRM note created'),
          'import' => TRUE,
          'where' => 'civicrm_o8_device_alert.civicrm',
          'export' => TRUE,
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'add' => NULL,
        ],
        'email' => [
          'name' => 'email',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Email'),
          'description' => E::ts('Email sent'),
          'import' => TRUE,
          'where' => 'civicrm_o8_device_alert.email',
          'export' => TRUE,
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'add' => NULL,
        ],
        'sms' => [
          'name' => 'sms',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Sms'),
          'description' => E::ts('SMS sent'),
          'import' => TRUE,
          'where' => 'civicrm_o8_device_alert.sms',
          'export' => TRUE,
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'add' => NULL,
        ],
        'api' => [
          'name' => 'api',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Api'),
          'description' => E::ts('API alert sent'),
          'import' => TRUE,
          'where' => 'civicrm_o8_device_alert.api',
          'export' => TRUE,
          'table_name' => 'civicrm_o8_device_alert',
          'entity' => 'Alert',
          'bao' => 'CRM_Devices_DAO_Alert',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'o8_device_alert', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'o8_device_alert', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
